import java.time.LocalDate
import java.lang.Enum as JavaEnum

/*
 * This file was generated by the Gradle 'init' task.
 *
 * This project uses @Incubating APIs which are subject to change.
 */

plugins {
    // Apply the common convention plugin for shared build configuration between library and application projects.
    id("provider.simple.kotlin.kotlin-common-conventions")

    // Apply the application plugin to add support for building a CLI application in Java.
    application
}

operator fun <T> Property<T>.plusAssign(value: T) {
    set(value)
}
operator fun <T> Property<T>.plusAssign(value: Provider<T>) {
    set(value)
}
// Since we add the Property<String>.plusAssign(Any) override, we also need to re-add the other ones.
// If we don't do that, then the Any override is used even if the target is a Provider<String>
operator fun Property<String>.plusAssign(value: String) {
    set(value)
}
// We need to add the JvmName annotation here, so the compilation doesn't fail with "Platform declaration clash"
@JvmName("stringProviderAssign")
operator fun Property<String>.plusAssign(value: Provider<String>) {
    set(value)
}
@JvmName("stringAnyAssign")
operator fun Property<String>.plusAssign(value: Any) {
    set(value.toString())
}
@JvmName("enumAnyAssign")
inline operator fun <reified T : Enum<T>> Property<T>.plusAssign(value: Any) {
    set(JavaEnum.valueOf(T::class.java, value.toString()))
}
operator fun Property<JavaLanguageVersion>.plusAssign(value: Int) {
    set(JavaLanguageVersion.of(value))
}
@JvmName("javaLanguageVersionStringAssign")
operator fun Property<JavaLanguageVersion>.plusAssign(value: String) {
    set(JavaLanguageVersion.of(value))
}

interface MyExtension {
    val stringProperty: Property<String>
    val javaVersion: Property<JavaVersion>
    val integerProperty: Property<Int>
    val javaLanguageVersion: Property<JavaLanguageVersion>
}

fun MyExtension.propertyAssignment() {
    stringProperty += "Hello"
    stringProperty += provider { "Hello" }
    stringProperty += LocalDate.now()
    javaVersion += "16"
    javaVersion += 16
    integerProperty += 16
    javaLanguageVersion += 16
    javaLanguageVersion += "16"
}
